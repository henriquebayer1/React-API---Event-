{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\45922978810\\\\Desktop\\\\2023-1S-2D\\\\sprint-3-front\\\\js-manha\\\\React\\\\eventplus\\\\src\\\\pages\\\\EventosAlunoPage\\\\EventosAlunoPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport MainContent from \"../../components/MainContent/MainContent\";\nimport Title from \"../../components/Title/Title\";\nimport Table from \"./TableEvA/TableEvA\";\nimport Container from \"../../components/Container/Container\";\nimport { SelectForm } from \"../../components/FormComponents/FormComponents\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Modal from \"../../components/Modal/Modal\";\nimport api from \"../../Services/Service\";\nimport setNotifyUser from \"../../components/Notification/Notification\";\nimport { eventsResource, typeEventResource, nextEventsResource, typeEventResourceDelete, instituicaoResource, myEventsResource } from \"../../Services/Service\";\nimport \"./EventosAlunoPage.css\";\nimport { UserContext } from \"../../Context/AuthContext\";\nimport TableEvA from \"./TableEvA/TableEvA\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventosAlunoPage = () => {\n  _s();\n  // state do menu mobile\n  const [exibeNavbar, setExibeNavbar] = useState(false);\n  const [eventos, setEventos] = useState([]);\n  // select mocado\n  const [quaisEventos, setQuaisEventos] = useState([{\n    value: 1,\n    text: \"Todos os eventos\"\n  }, {\n    value: 2,\n    text: \"Meus eventos\"\n  }]);\n  const [tipoEvento, setTipoEvento] = useState([]);\n  const [myEvents, setMyEvents] = useState([]);\n  const [op, setOp] = useState(\"\");\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  // recupera os dados globais do usuário\n  const {\n    userData,\n    setUserData\n  } = useContext(UserContext);\n  useEffect(() => {\n    async function LoadEvent() {\n      if (op === \"1\") {\n        try {\n          const retorno = await api.get(eventsResource);\n          setEventos(retorno.data);\n        } catch (error) {\n          alert(\"erro na api eventos\");\n        }\n      }\n      el;\n      async function LoadTypeEvents2() {\n        try {\n          const retorno = await api.get(`${myEventsResource}/${userData.userId}`);\n          setMyEvents(retorno.data);\n        } catch (error) {\n          alert(\"erro na api listar minhas\");\n        }\n      }\n    }\n    LoadEvent();\n  }, []);\n  useEffect(() => {\n    async function LoadTypeEvents() {\n      try {\n        const retorno = await api.get(typeEventResource);\n        setTipoEvento(retorno.data);\n      } catch (error) {\n        alert(\"erro na api tipos eventos\");\n      }\n    }\n    LoadTypeEvents();\n  }, []);\n\n  //   toggle meus eventos ou todos os eventos\n  // function myEvents(tpEvent) {\n  //   setOp(tpEvent);\n  // }\n\n  async function loadMyComentary(idComentary) {\n    return \"????\";\n  }\n  const showHideModal = () => {\n    setShowModal(showModal ? false : true);\n  };\n  const commentaryRemove = () => {\n    alert(\"Remover o comentário\");\n  };\n  function handleConnect() {\n    alert(\"Desenvolver a função conectar evento\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(userData.userId), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          titleText: \"Eventos\",\n          className: \"custom-title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectForm, {\n          id: \"id-tipo-evento\",\n          name: \"tipo-evento\",\n          required: true,\n          options: quaisEventos // aqui o array dos tipos\n          ,\n          manipulationFunction: e => setOp(e.target.value) // aqui só a variável state\n          ,\n          defaultValue: op,\n          addClass: \"select-tp-evento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          dados: eventos,\n          dados2: myEvents,\n          opcaoAPI: op,\n          fnConnect: handleConnect,\n          fnShowModal: () => {\n            showHideModal();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), console.log(\"LOG DE OP SELECT\"), console.log(op)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), showSpinner ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 22\n    }, this) : null, showModal ? /*#__PURE__*/_jsxDEV(Modal, {\n      userId: userData.userId,\n      showHideModal: showHideModal,\n      fnDelete: commentaryRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n_s(EventosAlunoPage, \"aSRKWNMe0YGrvFvlLfDdKM37EFw=\");\n_c = EventosAlunoPage;\nexport default EventosAlunoPage;\nvar _c;\n$RefreshReg$(_c, \"EventosAlunoPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Header","MainContent","Title","Table","Container","SelectForm","Spinner","Modal","api","setNotifyUser","eventsResource","typeEventResource","nextEventsResource","typeEventResourceDelete","instituicaoResource","myEventsResource","UserContext","TableEvA","jsxDEV","_jsxDEV","Fragment","_Fragment","EventosAlunoPage","_s","exibeNavbar","setExibeNavbar","eventos","setEventos","quaisEventos","setQuaisEventos","value","text","tipoEvento","setTipoEvento","myEvents","setMyEvents","op","setOp","showSpinner","setShowSpinner","showModal","setShowModal","userData","setUserData","LoadEvent","retorno","get","data","error","alert","el","LoadTypeEvents2","userId","LoadTypeEvents","loadMyComentary","idComentary","showHideModal","commentaryRemove","handleConnect","children","console","log","titleText","className","fileName","_jsxFileName","lineNumber","columnNumber","id","name","required","options","manipulationFunction","e","target","defaultValue","addClass","dados","dados2","opcaoAPI","fnConnect","fnShowModal","fnDelete","_c","$RefreshReg$"],"sources":["C:/Users/45922978810/Desktop/2023-1S-2D/sprint-3-front/js-manha/React/eventplus/src/pages/EventosAlunoPage/EventosAlunoPage.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport MainContent from \"../../components/MainContent/MainContent\";\r\nimport Title from \"../../components/Title/Title\";\r\nimport Table from \"./TableEvA/TableEvA\";\r\nimport Container from \"../../components/Container/Container\";\r\nimport { SelectForm } from \"../../components/FormComponents/FormComponents\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport api from \"../../Services/Service\";\r\nimport setNotifyUser from \"../../components/Notification/Notification\"\r\nimport {\r\n    eventsResource,\r\n    typeEventResource,\r\n    nextEventsResource,\r\n    typeEventResourceDelete,\r\n    instituicaoResource,\r\n    myEventsResource\r\n  } from \"../../Services/Service\";\r\nimport \"./EventosAlunoPage.css\";\r\nimport { UserContext } from \"../../Context/AuthContext\";\r\nimport TableEvA from \"./TableEvA/TableEvA\";\r\n\r\n\r\n\r\nconst EventosAlunoPage = () => {\r\n  // state do menu mobile\r\n  const [exibeNavbar, setExibeNavbar] = useState(false);\r\n  const [eventos, setEventos] = useState([]);\r\n  // select mocado\r\n  const [quaisEventos, setQuaisEventos] = useState([\r\n    { value: 1, text: \"Todos os eventos\" },\r\n    { value: 2, text: \"Meus eventos\" },\r\n  ]);\r\n\r\n  const [tipoEvento, setTipoEvento] = useState([]); \r\n  const [myEvents, setMyEvents] = useState([]); \r\n  const [op, setOp] = useState(\"\"); \r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // recupera os dados globais do usuário\r\n  const { userData, setUserData } = useContext(UserContext);\r\n\r\n \r\n  useEffect(() => {async function LoadEvent() {\r\n    \r\n    if (op === \"1\") {\r\n      try {\r\n        const retorno = await api.get(eventsResource)\r\n        setEventos(retorno.data)\r\n        \r\n        \r\n      } catch (error) {\r\n  \r\n     alert(\"erro na api eventos\")\r\n      }\r\n      \r\n    }\r\n  \r\n   el\r\n\r\n    async function LoadTypeEvents2() {\r\n  \r\n      try { const retorno = await api.get(`${myEventsResource}/${userData.userId}`)\r\n              setMyEvents(retorno.data)\r\n              \r\n           \r\n\r\n        } catch (error) {\r\n          alert(\"erro na api listar minhas\")}}\r\n      \r\n  \r\n    \r\n    } LoadEvent() }, []);\r\n  \r\n    useEffect(() => {async function LoadTypeEvents() {\r\n  \r\n      try {\r\n        const retorno = await api.get(typeEventResource)\r\n        setTipoEvento(retorno.data)\r\n        \r\n        \r\n      } catch (error) {\r\n  \r\n     alert(\"erro na api tipos eventos\")\r\n      }} LoadTypeEvents() }, []);\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n//   toggle meus eventos ou todos os eventos\r\n  // function myEvents(tpEvent) {\r\n  //   setOp(tpEvent);\r\n  // }\r\n\r\n  async function loadMyComentary(idComentary) {\r\n    return \"????\";\r\n  }\r\n\r\n  const showHideModal = () => {\r\n    setShowModal(showModal ? false : true);\r\n  };\r\n\r\n  const commentaryRemove = () => {\r\n    alert(\"Remover o comentário\");\r\n  };\r\n\r\n  function handleConnect() {\r\n    alert(\"Desenvolver a função conectar evento\");\r\n  }\r\n  return (\r\n    <>\r\n    {console.log(userData.userId)}\r\n      \r\n\r\n      <MainContent>\r\n        <Container>\r\n          <Title titleText={\"Eventos\"} className=\"custom-title\" />\r\n\r\n          <SelectForm\r\n            id=\"id-tipo-evento\"\r\n            name=\"tipo-evento\"\r\n            required={true}\r\n            options={quaisEventos} // aqui o array dos tipos\r\n            manipulationFunction={(e) => setOp(e.target.value)} // aqui só a variável state\r\n            defaultValue={op}\r\n            addClass=\"select-tp-evento\"\r\n          />\r\n\r\n          <Table\r\n           dados={eventos} \r\n           dados2={myEvents}\r\n           opcaoAPI={op}\r\n            fnConnect={handleConnect}\r\n            fnShowModal={() => {\r\n              showHideModal();\r\n            }}\r\n          />\r\n          {console.log(\"LOG DE OP SELECT\")}\r\n          {console.log(op)}\r\n        </Container>\r\n      </MainContent>\r\n\r\n      {/* SPINNER -Feito com position */}\r\n      {showSpinner ? <Spinner /> : null}\r\n\r\n      {showModal ? (\r\n        <Modal\r\n          userId={userData.userId}\r\n          showHideModal={showHideModal}\r\n          fnDelete={commentaryRemove}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventosAlunoPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}